// Code generated by goctl. DO NOT EDIT.
// Source: relation.proto

package server

import (
	"context"

	"github.com/ikun666/kun_chat/relation/rpc/internal/logic"
	"github.com/ikun666/kun_chat/relation/rpc/internal/svc"
	"github.com/ikun666/kun_chat/relation/rpc/pb/relation"
)

type RelationServer struct {
	svcCtx *svc.ServiceContext
	relation.UnimplementedRelationServer
}

func NewRelationServer(svcCtx *svc.ServiceContext) *RelationServer {
	return &RelationServer{
		svcCtx: svcCtx,
	}
}

func (s *RelationServer) AddFriend(ctx context.Context, in *relation.AddFriendRequest) (*relation.AddFriendResponse, error) {
	l := logic.NewAddFriendLogic(ctx, s.svcCtx)
	return l.AddFriend(in)
}

func (s *RelationServer) DelFriend(ctx context.Context, in *relation.DelFriendRequest) (*relation.DelFriendResponse, error) {
	l := logic.NewDelFriendLogic(ctx, s.svcCtx)
	return l.DelFriend(in)
}

func (s *RelationServer) GetFriends(ctx context.Context, in *relation.GetFriendsRequest) (*relation.GetFriendsResponse, error) {
	l := logic.NewGetFriendsLogic(ctx, s.svcCtx)
	return l.GetFriends(in)
}

func (s *RelationServer) AddGroup(ctx context.Context, in *relation.AddGroupRequest) (*relation.AddGroupResponse, error) {
	l := logic.NewAddGroupLogic(ctx, s.svcCtx)
	return l.AddGroup(in)
}

func (s *RelationServer) DelGroup(ctx context.Context, in *relation.DelGroupRequest) (*relation.DelGroupResponse, error) {
	l := logic.NewDelGroupLogic(ctx, s.svcCtx)
	return l.DelGroup(in)
}

func (s *RelationServer) GetGroups(ctx context.Context, in *relation.GetGroupsRequest) (*relation.GetGroupsResponse, error) {
	l := logic.NewGetGroupsLogic(ctx, s.svcCtx)
	return l.GetGroups(in)
}
